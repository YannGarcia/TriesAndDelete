module Btp_EncodeDecode {

    import from Btp_TypesAndValues all;
    import from Btp_TestSystem all;
    

external function fx_enc_BtpReq(in BtpReq pdu) return octetstring
 with { extension "prototype(convert) encode(RAW)" };
external function fx_dec_BtpInd(in octetstring stream) return BtpInd
 with { extension "prototype(convert) decode(RAW)" };
external function fx_dec_BtpInd_backtrack(in octetstring stream, out BtpInd pdu) return integer
 with { extension "prototype(backtrack) decode(RAW)" }


//    external function f_encvalue(in anytype p_any, out bitstring p_raw) return integer with { 
//      extension "prototype(convert)"
//      extension "decode(RAW)"
//    };
//    external function f_decvalue(in bitstring p_raw, out anytype p_any) return integer with { 
//      extension "prototype(convert)"
//      extension "decode(RAW)"
//    };
//    
//    external function fx_dec_BtpInd(inout bitstring p_raw, out BtpInd p_btpInd) return integer with { 
//      extension "prototype(convert)"
//      extension "decode(RAW)"
//    };
//    external function fx_enc_BtpReq(in BtpInd p_btpInd) return bitstring with { 
//      extension "prototype(convert)"
//      extension "encode(RAW)"
//    };
    
    
//    external function fx_enc_BtpPayload (BtpPayload p) return bitstring
//        with {extension "prototype(convert)"}
//    
//    external function fx_dec_BtpPayload (inout bitstring b, out BtpPayload p) return integer
//        with {extension "prototype(sliding)"}
        
} // End of module Btp_EncodeDecode 
