// This C++ source file was generated by the TTCN-3 compiler
// of the TTCN-3 Test Executor version CRL 113 200/6 R1A
// for Yann Garcia (yann@Ubuntu64) on Tue Feb 28 11:22:01 2017

// Copyright (c) 2000-2017 Ericsson Telecom AB

// Do not edit this file unless you know what you are doing.

/* Including header files */

#include "Btp_TestCases.hh"

namespace Btp__TestCases {

/* Prototypes of static functions */

static void pre_init_module();
static void post_init_module();

/* Literal string constants */

static const unsigned char module_checksum[] = { 0xb6, 0x0c, 0xdd, 0x1b, 0x6d, 0x6d, 0xed, 0xed, 0x94, 0xe8, 0x23, 0xca, 0x99, 0xdf, 0x67, 0xf8 };

/* Global variable definitions */

TTCN_Module module_object("Btp_TestCases", __DATE__, __TIME__, module_checksum, pre_init_module, NULL, 0U, 4294967295U, 4294967295U, 4294967295U, NULL, 0LU, 0, post_init_module, NULL, NULL, NULL, NULL, NULL, NULL);

static const RuntimeVersionChecker ver_checker(  current_runtime_version.requires_major_version_6,
  current_runtime_version.requires_minor_version_1,
  current_runtime_version.requires_patch_level_0,  current_runtime_version.requires_runtime_2);

/* Bodies of functions, altsteps and testcases */

verdicttype testcase_TC__BTP__PGA__BV__01(boolean has_timer, double timer_value)
{
TTCN_Runtime::check_begin_testcase(has_timer, timer_value);
TTCN_Location current_location("../ttcn/Btp_TestCases.ttcn", 8, TTCN_Location::LOCATION_TESTCASE, "TC_BTP_PGA_BV_01");
try {
TTCN_Runtime::begin_testcase("Btp_TestCases", "TC_BTP_PGA_BV_01", "Btp_TestSystem", "ItsBtp", "Btp_TestSystem", "ItsBtpSystem", has_timer, timer_value);
current_location.update_lineno(9);
/* ../ttcn/Btp_TestCases.ttcn, line 9 */
Btp__TestSystem::BtpInd v__btp__ind;
current_location.update_lineno(11);
/* ../ttcn/Btp_TestCases.ttcn, line 11 */
TIMER tc__ac("tc_ac", 1.5e1);
current_location.update_lineno(13);
/* ../ttcn/Btp_TestCases.ttcn, line 13 */
TTCN_Runtime::map_port(MTC_COMPREF, Btp__TestSystem::ItsBtp_component_btpPort.get_name(), SYSTEM_COMPREF, Btp__TestSystem::ItsBtpSystem_component_btpPort.get_name());
current_location.update_lineno(15);
/* ../ttcn/Btp_TestCases.ttcn, line 15 */
tc__ac.start();
current_location.update_lineno(16);
/* ../ttcn/Btp_TestCases.ttcn, line 16 */
{
tmp_0:
alt_status tmp_0_alt_flag_0 = ALT_MAYBE;
alt_status tmp_0_alt_flag_1 = ALT_MAYBE;
alt_status tmp_0_alt_flag_2 = ALT_MAYBE;
alt_status tmp_0_default_flag = ALT_MAYBE;
TTCN_Snapshot::take_new(FALSE);
for ( ; ; ) {
if (tmp_0_alt_flag_0 == ALT_MAYBE) {
current_location.update_lineno(17);
/* ../ttcn/Btp_TestCases.ttcn, line 17 */
{
class Value_Redirect_tmp_1 : public Value_Redirect_Interface {
Btp__TestSystem::BtpInd* ptr_0;
public:
Value_Redirect_tmp_1(Btp__TestSystem::BtpInd* par_0)
: ptr_0(par_0) { }
void set_values(const Base_Type* p)
{
const Btp__TestSystem::BtpInd* par = static_cast<const Btp__TestSystem::BtpInd*>(p);
*ptr_0 = (*par);
}
};
Value_Redirect_tmp_1 tmp_2(&(v__btp__ind));
tmp_0_alt_flag_0 = Btp__TestSystem::ItsBtp_component_btpPort.receive(Btp__Templates::mw__btpInd(Btp__Templates::mw__btpB(INTEGER_template(ANY_VALUE), INTEGER_template(ANY_VALUE), Btp__TypesAndValues::BtpPayload_template(ANY_VALUE))), &tmp_2, any_compref, NULL, NULL);
}
if (tmp_0_alt_flag_0 == ALT_YES) {
current_location.update_lineno(24);
/* ../ttcn/Btp_TestCases.ttcn, line 24 */
tc__ac.stop();
current_location.update_lineno(31);
/* ../ttcn/Btp_TestCases.ttcn, line 31 */
TTCN_Runtime::setverdict(PASS);
break;
}
}
if (tmp_0_alt_flag_1 == ALT_MAYBE) {
current_location.update_lineno(33);
/* ../ttcn/Btp_TestCases.ttcn, line 33 */
tmp_0_alt_flag_1 = Btp__TestSystem::ItsBtp_component_btpPort.receive(any_compref, NULL, NULL);
if (tmp_0_alt_flag_1 == ALT_YES) {
current_location.update_lineno(34);
/* ../ttcn/Btp_TestCases.ttcn, line 34 */
tc__ac.stop();
current_location.update_lineno(35);
/* ../ttcn/Btp_TestCases.ttcn, line 35 */
TTCN_Runtime::setverdict(FAIL);
break;
}
}
if (tmp_0_alt_flag_2 == ALT_MAYBE) {
current_location.update_lineno(37);
/* ../ttcn/Btp_TestCases.ttcn, line 37 */
tmp_0_alt_flag_2 = tc__ac.timeout(NULL);
if (tmp_0_alt_flag_2 == ALT_YES) {
current_location.update_lineno(37);
/* ../ttcn/Btp_TestCases.ttcn, line 37 */
TTCN_Runtime::setverdict(INCONC);
current_location.update_lineno(38);
/* ../ttcn/Btp_TestCases.ttcn, line 38 */
TTCN_Runtime::setverdict(FAIL);
break;
}
}
if (tmp_0_default_flag == ALT_MAYBE) {
tmp_0_default_flag = TTCN_Default::try_altsteps();
if (tmp_0_default_flag == ALT_YES || tmp_0_default_flag == ALT_BREAK) break;
else if (tmp_0_default_flag == ALT_REPEAT) goto tmp_0;
}
current_location.update_lineno(16);
/* ../ttcn/Btp_TestCases.ttcn, line 16 */
if (tmp_0_alt_flag_0 == ALT_NO && tmp_0_alt_flag_1 == ALT_NO && tmp_0_alt_flag_2 == ALT_NO && tmp_0_default_flag == ALT_NO) TTCN_error("None of the branches can be chosen in the alt statement in file ../ttcn/Btp_TestCases.ttcn between lines 16 and 40.");
TTCN_Snapshot::take_new(TRUE);
}
}
current_location.update_lineno(42);
/* ../ttcn/Btp_TestCases.ttcn, line 42 */
TTCN_Runtime::unmap_port(MTC_COMPREF, Btp__TestSystem::ItsBtp_component_btpPort.get_name(), SYSTEM_COMPREF, Btp__TestSystem::ItsBtpSystem_component_btpPort.get_name());
} catch (const TC_Error& tc_error) {
} catch (const TC_End& tc_end) {
TTCN_Logger::log_str(TTCN_FUNCTION, "Test case TC_BTP_PGA_BV_01 was stopped.");
}
return TTCN_Runtime::end_testcase();
}


/* Bodies of static functions */

static void pre_init_module()
{
TTCN_Location current_location("../ttcn/Btp_TestCases.ttcn", 0, TTCN_Location::LOCATION_UNKNOWN, "Btp_TestCases");
Btp__Templates::module_object.pre_init_module();
Btp__EncodeDecode::module_object.pre_init_module();
module_object.add_testcase_nonpard("TC_BTP_PGA_BV_01", testcase_TC__BTP__PGA__BV__01);
}

static void post_init_module()
{
TTCN_Location current_location("../ttcn/Btp_TestCases.ttcn", 0, TTCN_Location::LOCATION_UNKNOWN, "Btp_TestCases");
Btp__Templates::module_object.post_init_module();
Btp__EncodeDecode::module_object.post_init_module();
}


} /* end of namespace */
